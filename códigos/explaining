DECLARANDO VARIÁVEIS DE NOME, FLOAT, NÚMERO E LETRA.
%s para representar uma string
%d para número inteiro 
%c para letra
%f para float
\n para pular linha
printf(""),variável;

#include <stdio.h>

int main() {
    
    //This is a comment

   int x; //declarating
   x = 123; //initialization
   int y = 321;
   
   int age = 18; //inteiro
   float gpa = 2.05;//floating number  
   char grade = 'A'; //sigle character
   char name[] = "Laura"; //array of characters
   
   printf("Hello %s\n",name);
   printf("You are %d years old\n",age);
   printf("Your avarage grade is %c\n",grade);
   printf("Your gpa is %f\n",gpa);


    return 0;
}
---------------------------------------------------------
FORMAT SPECIFIERS
%.1 Precisão decimal (quantos números dps da vírgula vai ter)
%1 minimum field width (com qntos espaços de width vai ser displayed)

#include <stdio.h>
#include <stdbool.h>

int main(){
     
     
     float item1 = 5.75;
     float item2 = 10.00;
     float item3 = 100.99;
     
     printf("Item 1: $%8.2f\n",item1);
      printf("Item 2: $%8.2f\n",item2);
       printf("Item 3: $%8.2f",item3);
     /* o .2 depois do % é para mostrar apenas x(2) números depois
     da vírgula.
     o número antes do ponto é para minimum field width */
     
     return 0;
}

--------------------------------------------------------------
CONSTANT
fixed value that cannot be altered by the program during its execution

#include <stdio.h>
#include <stdbool.h>

int main(){
     
     //const is a value that cannot be changed by the program
     const float PI = 3.14159;
      //pi = 420.69 se alguém tentar declarar outro número, vai dar erro.
     
     printf("%f", PI);
     
     return 0;
}

-----------------------------------------------------------------
OPERADORES ARITIMÉTICOS
+ adição
- subtração
* multiplicação
/ divisão
% modulus
++ increment
-- decrement

   #include <stdio.h>

   int main(){
    
    int x = 5;
    int y = 2;
    
    int z = x * y;
//trocar o operador para diferentes resultados
    printf("%d",z);
    
    return 0;
}
se dividir 5 / 2, o resultado será 2, pq só store int numbers.
para que isso não ocorra:

--------------------------------------------------------------
exemplo aleatório:

#include <stdio.h>

int main()
{
   printf("Eu quero ser uma aluna nota 10 \n");
   printf("Eu vou fechar a prova de C \n");
   printf("Maria tem %d anos \n", 40);
   printf("João tem %d anos\n", 52);
   printf("Marcelo comprou 5 tomates cada um custando 2.3, então ele gastou %f \n", 5 * 2.3);
   printf("Joana comprou 23 caixas de leite e gastou 57.5, então a caixa de leite custa %f", 23 / 57.5);
    return 0;
}

